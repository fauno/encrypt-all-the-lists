#!/usr/bin/env bash
# exportar-lista-cifrada - exporta las llaves privadas de forma segura
#
# © 2014 Nicolás Reynolds <fauno@endefensadelsl.org>
#
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.
# 
# http://www.gnu.org/prep/maintain/html_node/License-Notices-for-Other-Files.html
set -e

VERSION="$(gpg --version | head -n1 | cut -d' ' -f3 | cut -d'.' -f1,2)"
MVERSION="$(gpg --version | head -n1 | cut -d' ' -f3 | cut -d'.' -f3)"
if test "2.1" = "${VERSION}" && test 3 -lt "${MVERSION}" ; then
  echo "$0 todavía no funciona correctamente en esta versión de gpg"

  if which gpg1 &>/dev/null; then
    echo "Usando gpg1"
    GPG=gpg1
  else
    echo "Instala gpg1 para continuar"
    exit
  fi
fi

# debuguear si exportamos la variable DEBUG con cualquier cosa
test ! -z $DEBUG && set -x
# decirle a pinentry qué tty usamos
test -z $GPG_TTY && export GPG_TTY=$(tty)

if test $# -eq 0 ; then
  echo "Exporta la llave de una lista en tu llavero para compartirla"
  echo
  echo "Uso: ${0##*/} lab@hackcoop.com.ar remi@ten.te"
  exit 0
fi

listkey="$1" ; shift

echo "Exportando ${listkey}"
# basicamente lo mismo que el ultimo paso de crear-lista-cifrada
{
  ${GPG:-gpg} --armor --export "${listkey}"
  ${GPG:-gpg} --armor --export-secret-keys \
              "${listkey}"
} | ${GPG:-gpg} --default-recipient-self \
                $(for i in $@; do echo "--hidden-recipient $i"; done) \
                --encrypt \
                --armor >"${listkey}.asc"

echo "Envía el archivo cifrado ${listkey}.asc a ${@// /, }"

# TODO usar sendmail si está disponible (pero cómo saber si es
# funcional?)
