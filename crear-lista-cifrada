#!/usr/bin/env bash
# crear-lista-cifrada - crea una llave gpg compartida para usar en
#                       listas de correo privadas
#
# © 2014 Nicolás Reynolds <fauno@endefensadelsl.org>
#
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.
# 
# http://www.gnu.org/prep/maintain/html_node/License-Notices-for-Other-Files.html
set -e

# debuguear si exportamos la variable DEBUG con cualquier cosa
test ! -z $DEBUG && set -x

if test $# -eq 0 ; then
  echo "Crea las llaves para una lista cifrada"
  echo 
  echo "    -p Crea una llave permanente"
  echo "Uso: ${0##*/} [-p] lab@hackcoop.com.ar [lista] [de] [suscriptores]"
  exit 0
fi

PERMANENTE=false
while getopts p flag; do
  case ${flag} in
    p) PERMANENTE=true ;;
  esac
done; let OPTIND--; shift ${OPTIND}

pgrep haveged &>/dev/null || echo "Te recomiendo instalar haveged ;)"

# Crear llaves permanentes
if ${PERMANENTE}; then
  # El HOME es el mismo
  LISTA_HOME="${HOME}"

  echo "Llave permanente"
  echo "================"
  echo "Se está creando una llave permanente, esto quiere decir que la
llave maestra de la lista se agregará a tu llavero local y vas a poder
revocar llaves viejas y crear nuevas.

Sin embargo, esto quiere decir que tenés el poder de decidir qué llave
se va a usar en la lista." | fmt -u
else
  LISTA_HOME="$(mktemp -dt XXXX || echo /tmp/${0%%/*})"

  echo "Llave adhoc"
  echo "==========="
  echo "Se está creando una llave adhoc, esto quiere decir que no habrá
una llave maestra disponible y no será posible revocar la llave de
la lista ni crear nuevas.  Para cambiar la llave de la lista basta con
crear una llave nueva (adhoc o permanente)." | fmt -u
fi

# TODO como alias es más simple de declarar pero luego no lo toma como
# comando válido :|
lista_gpg() {
  HOME=$LISTA_HOME gpg $@
}

lista="${1}" ; shift

echo
# genera una llave para la lista especificada, los bits de la llave
# maestra no importan porque se va a descartar luego.
echo "%echo Generando clave para la lista ${lista}
Key-Type: RSA
Key-Length: 2048
Name-Real: ${lista%%@*}
Name-Email: ${lista}
Preferences: SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES CAST5 ZLIB BZIP2 ZIP Uncompressed
Key-Usage: sign
Subkey-Type: RSA
Subkey-Length: 4096
Subkey-Usage: encrypt
Passphrase: ${lista%%@*}
%echo La contraseña temporal para esta llave es ${lista%%@*}
Expire-Date: 0
Keyserver: hkp://localhost
%commit
%echo Listo" | lista_gpg --gen-key --batch --quiet

# exporta la subllave completa y la cifra para todas las participantes.
# el proceso inutiliza la llave maestra y resetea la contraseña
{
  lista_gpg --armor --export
  lista_gpg --armor --export-secret-subkeys --export-options export-reset-subkey-passwd
} | gpg --default-recipient-self \
        $(for i in $@; do echo "--hidden-recipient $i"; done) \
        --encrypt \
        --armor >"${lista}.asc"

echo
test "${#@}" -gt 1 && echo "Compartí el archivo ${lista}.asc con ${@// /, }"
echo
${PERMANENTE} || echo "Para importarlo:"
${PERMANENTE} || echo "  importar-lista-cifrada ${lista}.asc"

# borrar el home temporal
# podríamos probar por PERMANENTE pero mejor chequear que no se trate de
# nuestro HOME
# test "${HOME}" != "${LISTA_HOME}" && shred -u "${LISTA_HOME}/".gnupg/*
